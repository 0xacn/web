case $1 in
	('')
		npm i
		cd src
		for path in $(find . -name '*.elm')
		do
			base=${path##*/}
			../node_modules/.bin/elm make "src/${path#*/}" --optimize --output="public/elm/${base%.*}.js"
		done
		cd ../functions
		npm i
		for path in $(find . -not \( -path ./node_modules -prune \) -name '*.mjml')
		do
			node_modules/.bin/mjml --config.minify -r "$path" -o "${path%.*}.html"
		done
		tsc
		cd ..
	;;
	('-m'|'--minify')
		./build
		# for path in $(find . -not \( -path ./node_modules -prune \) -not \( -path ./functions/node_modules -prune \) -name '*.html')
		# do
		# 	node_modules/.bin/html-minifier --collapse-whitespace --remove-comments --remove-optional-tags --remove-redundant-attributes --remove-script-type-attributes --remove-style-link-type-attributes --minify-css true --minify-js true "$path" -o "$path"
		# done
		for path in $(find . -not \( -path ./node_modules -prune \) -not \( -path ./functions/node_modules -prune \) -name '*.css')
		do
			node_modules/.bin/cssnano "$path" "$path"
		done
		for path in $(find . -not \( -path ./node_modules -prune \) -not \( -path ./functions/node_modules -prune \) -name '*.js')
		do
			node_modules/.bin/uglifyjs "$path" -o "$path"
		done
	;;
	(*)
		echo Invalid option $1
	;;
esac